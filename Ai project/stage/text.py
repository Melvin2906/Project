print("'Bien sûr ! Voici un exemple complet et fonctionnel pour créer une calculatrice simple en utilisant les outils les plus courants pour le web : HTML, CSS et JavaScript. \n\nPour que cela fonctionne, vous devez créer 3 fichiers dans le même dossier : `index.html`, `style.css`, et `script.js`.\n\n### 1. Fichier HTML (`index.html`)\nCe fichier définit la structure de la calculatrice : l'écran et tous les boutons.\n\n```html\n<!DOCTYPE html>\n<html lang=\'fr\'>\n<head>\n    <meta charset=\'UTF-8\'>\n    <meta name=\'viewport\' content=\'width=device-width, initial-scale=1.0\'>\n    <title>Calculatrice Virtuelle</title>\n    <link rel=\'stylesheet\' href=\'style.css\'>\n</head>\n<body>\n\n    <div class=\'calculator-grid\'>\n        <div class=\'output\'>\n            <div data-previous-operand class=\'previous-operand\'></div>\n            <div data-current-operand class=\'current-operand\'></div>\n        </div>\n        <button data-all-clear class=\'span-two\'>AC</button>\n        <button data-delete>DEL</button>\n        <button data-operation>÷</button>\n        <button data-number>1</button>\n        <button data-number>2</button>\n        <button data-number>3</button>\n        <button data-operation>*</button>\n        <button data-number>4</button>\n        <button data-number>5</button>\n        <button data-number>6</button>\n        <button data-operation>+</button>\n        <button data-number>7</button>\n        <button data-number>8</button>\n        <button data-number>9</button>\n        <button data-operation>-</button>\n        <button data-number>.</button>\n        <button data-number>0</button>\n        <button data-equals class=\'span-two\'>=</button>\n    </div>\n\n    <script src=\'script.js\'></script>\n</body>\n</html>\n```\n\n### 2. Fichier CSS (`style.css`)\nCe fichier s'occupe de l'apparence pour que ça ressemble à une vraie calculatrice.\n\n```css\n*, *::before, *::after {\n    box-sizing: border-box;\n    font-family: sans-serif;\n    font-weight: bold;\n}\n\nbody {\n    padding: 0;\n    margin: 0;\n    background: linear-gradient(to right, #00AAFF, #00FF6C);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n}\n\n.calculator-grid {\n    display: grid;\n    grid-template-columns: repeat(4, 100px);\n    grid-template-rows: minmax(120px, auto) repeat(5, 100px);\n    border: 2px solid #FFF;\n    border-radius: 10px;\n    overflow: hidden;\n}\n\n.calculator-grid > button {\n    cursor: pointer;\n    font-size: 2rem;\n    border: 1px solid white;\n    outline: none;\n    background-color: rgba(255, 255, 255, .75);\n}\n\n.calculator-grid > button:hover {\n    background-color: rgba(255, 255, 255, .9);\n}\n\n.span-two {\n    grid-column: span 2;\n}\n\n.output {\n    grid-column: 1 / -1;\n    background-color: rgba(0, 0, 0, .75);\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: space-around;\n    padding: 10px;\n    word-wrap: break-word;\n    word-break: break-all;\n}\n\n.output .previous-operand {\n    color: rgba(255, 255, 255, .75);\n    font-size: 1.5rem;\n}\n\n.output .current-operand {\n    color: white;\n    font-size: 2.5rem;\n}\n```\n\n### 3. Fichier JavaScript (`script.js`)\nC'est le cerveau de la calculatrice. Il gère tous les calculs et les interactions.\n\n```javascript\n// Classe pour gérer toute la logique de la calculatrice\nclass Calculator {\n    constructor(previousOperandTextElement, currentOperandTextElement) {\n        this.previousOperandTextElement = previousOperandTextElement;\n        this.currentOperandTextElement = currentOperandTextElement;\n        this.clear();\n    }\n\n    // Réinitialise la calculatrice\n    clear() {\n        this.currentOperand = '';\n        this.previousOperand = '';\n        this.operation = undefined;\n    }\n\n    // Supprime le dernier chiffre\n    delete() {\n        this.currentOperand = this.currentOperand.toString().slice(0, -1);\n    }\n\n    // Ajoute un nombre à l'écran\n    appendNumber(number) {\n        if (number === '.' && this.currentOperand.includes('.')) return; // Empêche d'ajouter plusieurs points\n        this.currentOperand = this.currentOperand.toString() + number.toString();\n    }\n\n    // Choisit une opération (+, -, *, ÷)\n    chooseOperation(operation) {\n        if (this.currentOperand === '') return;\n        if (this.previousOperand !== '') {\n            this.compute();\n        }\n        this.operation = operation;\n        this.previousOperand = this.currentOperand;\n        this.currentOperand = '';\n    }\n\n    // Fait le calcul\n    compute() {\n        let computation;\n        const prev = parseFloat(this.previousOperand);\n        const current = parseFloat(this.currentOperand);\n        if (isNaN(prev) || isNaN(current)) return;\n        switch (this.operation) {\n            case '+':\n                computation = prev + current;\n                break;\n            case '-':\n                computation = prev - current;\n                break;\n            case '*':\n                computation = prev * current;\n                break;\n            case '÷':\n                computation = prev / current;\n                break;\n            default:\n                return;\n        }\n        this.currentOperand = computation;\n        this.operation = undefined;\n        this.previousOperand = '';\n    }\n\n    // Met à jour l'affichage\n    updateDisplay() {\n        this.currentOperandTextElement.innerText = this.currentOperand;\n        if (this.operation != null) {\n            this.previousOperandTextElement.innerText = `${this.previousOperand} ${this.operation}`;\n        } else {\n            this.previousOperandTextElement.innerText = '';\n        }\n    }\n}\n\n// Sélection des éléments HTML\nconst numberButtons = document.querySelectorAll('[data-number]');\nconst operationButtons = document.querySelectorAll('[data-operation]');\nconst equalsButton = document.querySelector('[data-equals]');\nconst deleteButton = document.querySelector('[data-delete]');\nconst allClearButton = document.querySelector('[data-all-clear]');\nconst previousOperandTextElement = document.querySelector('[data-previous-operand]');\nconst currentOperandTextElement = document.querySelector('[data-current-operand]');\n\n// Création de l'objet calculatrice\nconst calculator = new Calculator(previousOperandTextElement, currentOperandTextElement);\n\n// Ajout des écouteurs d'événements pour les boutons\nnumberButtons.forEach(button => {\n    button.addEventListener('click', () => {\n        calculator.appendNumber(button.innerText);\n        calculator.updateDisplay();\n    });\n});\n\noperationButtons.forEach(button => {\n    button.addEventListener('click', () => {\n        calculator.chooseOperation(button.innerText);\n        calculator.updateDisplay();\n    });\n});\n\nequalsButton.addEventListener('click', button => {\n    calculator.compute();\n    calculator.updateDisplay();\n});\n\nallClearButton.addEventListener('click', button => {\n    calculator.clear();\n    calculator.updateDisplay();\n});\n\ndeleteButton.addEventListener('click', button => {\n    calculator.delete();\n    calculator.updateDisplay();\n});\n```\n\n### Comment l'utiliser :\n\n1.  Créez un nouveau dossier sur votre ordinateur.\n2.  À l'intérieur de ce dossier, créez les trois fichiers : `index.html`, `style.css`, et `script.js`.\n3.  Copiez-collez le contenu de chaque bloc de code ci-dessus dans le fichier correspondant.\n4.  Enregistrez les fichiers.\n5.  Ouvrez le fichier `index.html` avec votre navigateur web (Chrome, Firefox, etc.).\n\nVotre calculatrice virtuelle sera alors fonctionnelle !'")
